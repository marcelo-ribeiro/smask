{"version":3,"file":"index.umd.js","sources":["../src/number.ts","../src/currency/currency-map.ts","../src/currency/index.ts","../src/date.ts","../src/tokens.ts","../src/unmask.ts","../src/mask.ts","../src/unmaskNumber.ts","../src/input.ts","../src/prepareMaskInputs.ts"],"sourcesContent":["/**\n * Get a locale number\n */\nexport const numberFormat = (\n  value: number,\n  locale: string = navigator.language,\n  style = \"decimal\",\n  options?: Intl.NumberFormatOptions\n): string => {\n  options = { style, ...options };\n  return new Intl.NumberFormat(locale, options).format(value);\n};\n","// www.npmjs.com/package/locale-currency\nexport const currencyLocale: {\n  [key: string]: string;\n} = {\n  AD: \"EUR\",\n  AE: \"AED\",\n  AF: \"AFN\",\n  AG: \"XCD\",\n  AI: \"XCD\",\n  AL: \"ALL\",\n  AM: \"AMD\",\n  AO: \"AOA\",\n  AR: \"ARS\",\n  AS: \"USD\",\n  AT: \"EUR\",\n  AU: \"AUD\",\n  AW: \"AWG\",\n  AX: \"EUR\",\n  AZ: \"AZN\",\n  BA: \"BAM\",\n  BB: \"BBD\",\n  BD: \"BDT\",\n  BE: \"EUR\",\n  BF: \"XOF\",\n  BG: \"BGN\",\n  BH: \"BHD\",\n  BI: \"BIF\",\n  BJ: \"XOF\",\n  BL: \"EUR\",\n  BM: \"BMD\",\n  BN: \"BND\",\n  BO: \"BOB\",\n  BQ: \"USD\",\n  BR: \"BRL\",\n  BS: \"BSD\",\n  BT: \"BTN\",\n  BV: \"NOK\",\n  BW: \"BWP\",\n  BY: \"BYN\",\n  BZ: \"BZD\",\n  CA: \"CAD\",\n  CC: \"AUD\",\n  CD: \"CDF\",\n  CF: \"XAF\",\n  CG: \"XAF\",\n  CH: \"CHF\",\n  CI: \"XOF\",\n  CK: \"NZD\",\n  CL: \"CLP\",\n  CM: \"XAF\",\n  CN: \"CNY\",\n  CO: \"COP\",\n  CR: \"CRC\",\n  CU: \"CUP\",\n  CV: \"CVE\",\n  CW: \"ANG\",\n  CX: \"AUD\",\n  CY: \"EUR\",\n  CZ: \"CZK\",\n  DE: \"EUR\",\n  DJ: \"DJF\",\n  DK: \"DKK\",\n  DM: \"XCD\",\n  DO: \"DOP\",\n  DZ: \"DZD\",\n  EC: \"USD\",\n  EE: \"EUR\",\n  EG: \"EGP\",\n  EH: \"MAD\",\n  ER: \"ERN\",\n  ES: \"EUR\",\n  ET: \"ETB\",\n  FI: \"EUR\",\n  FJ: \"FJD\",\n  FK: \"FKP\",\n  FM: \"USD\",\n  FO: \"DKK\",\n  FR: \"EUR\",\n  GA: \"XAF\",\n  GB: \"GBP\",\n  GD: \"XCD\",\n  GE: \"GEL\",\n  GF: \"EUR\",\n  GG: \"GBP\",\n  GH: \"GHS\",\n  GI: \"GIP\",\n  GL: \"DKK\",\n  GM: \"GMD\",\n  GN: \"GNF\",\n  GP: \"EUR\",\n  GQ: \"XAF\",\n  GR: \"EUR\",\n  GS: \"GBP\",\n  GT: \"GTQ\",\n  GU: \"USD\",\n  GW: \"XOF\",\n  GY: \"GYD\",\n  HK: \"HKD\",\n  HM: \"AUD\",\n  HN: \"HNL\",\n  HR: \"HRK\",\n  HT: \"HTG\",\n  HU: \"HUF\",\n  ID: \"IDR\",\n  IE: \"EUR\",\n  IL: \"ILS\",\n  IM: \"GBP\",\n  IN: \"INR\",\n  IO: \"USD\",\n  IQ: \"IQD\",\n  IR: \"IRR\",\n  IS: \"ISK\",\n  IT: \"EUR\",\n  JE: \"GBP\",\n  JM: \"JMD\",\n  JO: \"JOD\",\n  JP: \"JPY\",\n  KE: \"KES\",\n  KG: \"KGS\",\n  KH: \"KHR\",\n  KI: \"AUD\",\n  KM: \"KMF\",\n  KN: \"XCD\",\n  KP: \"KPW\",\n  KR: \"KRW\",\n  KW: \"KWD\",\n  KY: \"KYD\",\n  KZ: \"KZT\",\n  LA: \"LAK\",\n  LB: \"LBP\",\n  LC: \"XCD\",\n  LI: \"CHF\",\n  LK: \"LKR\",\n  LR: \"LRD\",\n  LS: \"LSL\",\n  LT: \"EUR\",\n  LU: \"EUR\",\n  LV: \"EUR\",\n  LY: \"LYD\",\n  MA: \"MAD\",\n  MC: \"EUR\",\n  MD: \"MDL\",\n  ME: \"EUR\",\n  MF: \"EUR\",\n  MG: \"MGA\",\n  MH: \"USD\",\n  MK: \"MKD\",\n  ML: \"XOF\",\n  MM: \"MMK\",\n  MN: \"MNT\",\n  MO: \"MOP\",\n  MP: \"USD\",\n  MQ: \"EUR\",\n  MR: \"MRO\",\n  MS: \"XCD\",\n  MT: \"EUR\",\n  MU: \"MUR\",\n  MV: \"MVR\",\n  MW: \"MWK\",\n  MX: \"MXN\",\n  MY: \"MYR\",\n  MZ: \"MZN\",\n  NA: \"NAD\",\n  NC: \"XPF\",\n  NE: \"XOF\",\n  NF: \"AUD\",\n  NG: \"NGN\",\n  NI: \"NIO\",\n  NL: \"EUR\",\n  NO: \"NOK\",\n  NP: \"NPR\",\n  NR: \"AUD\",\n  NU: \"NZD\",\n  NZ: \"NZD\",\n  OM: \"OMR\",\n  PA: \"PAB\",\n  PE: \"PEN\",\n  PF: \"XPF\",\n  PG: \"PGK\",\n  PH: \"PHP\",\n  PK: \"PKR\",\n  PL: \"PLN\",\n  PM: \"EUR\",\n  PN: \"NZD\",\n  PR: \"USD\",\n  PS: \"ILS\",\n  PT: \"EUR\",\n  PW: \"USD\",\n  PY: \"PYG\",\n  QA: \"QAR\",\n  RE: \"EUR\",\n  RO: \"RON\",\n  RS: \"RSD\",\n  RU: \"RUB\",\n  RW: \"RWF\",\n  SA: \"SAR\",\n  SB: \"SBD\",\n  SC: \"SCR\",\n  SD: \"SDG\",\n  SE: \"SEK\",\n  SG: \"SGD\",\n  SH: \"SHP\",\n  SI: \"EUR\",\n  SJ: \"NOK\",\n  SK: \"EUR\",\n  SL: \"SLL\",\n  SM: \"EUR\",\n  SN: \"XOF\",\n  SO: \"SOS\",\n  SR: \"SRD\",\n  ST: \"STD\",\n  SV: \"SVC\",\n  SX: \"ANG\",\n  SY: \"SYP\",\n  SZ: \"SZL\",\n  TC: \"USD\",\n  TD: \"XAF\",\n  TF: \"EUR\",\n  TG: \"XOF\",\n  TH: \"THB\",\n  TJ: \"TJS\",\n  TK: \"NZD\",\n  TL: \"USD\",\n  TM: \"TMT\",\n  TN: \"TND\",\n  TO: \"TOP\",\n  TR: \"TRY\",\n  TT: \"TTD\",\n  TV: \"AUD\",\n  TW: \"TWD\",\n  TZ: \"TZS\",\n  UA: \"UAH\",\n  UG: \"UGX\",\n  UM: \"USD\",\n  US: \"USD\",\n  UY: \"UYU\",\n  UZ: \"UZS\",\n  VA: \"EUR\",\n  VC: \"XCD\",\n  VE: \"VEF\",\n  VG: \"USD\",\n  VI: \"USD\",\n  VN: \"VND\",\n  VU: \"VUV\",\n  WF: \"XPF\",\n  WS: \"WST\",\n  YE: \"YER\",\n  YT: \"EUR\",\n  ZA: \"ZAR\",\n  ZM: \"ZMW\",\n  ZW: \"ZWL\",\n};\n","import { numberFormat } from \"../number\";\nimport { currencyLocale } from \"./currency-map\";\n\nexport const currencyFormat = (\n  value: number,\n  locale: string = navigator.language,\n  currency: Intl.NumberFormatOptions[\"currency\"] = currencyLocale[\n    locale.slice(-2)\n  ]\n): string => {\n  return numberFormat(value, locale, \"currency\", { currency });\n};\n","const referenceDateDigits = \"01/01/1970\".replace(/\\D/g, \"\");\n\nexport const getComputedDate = (value: string): string => {\n  const valueDigits = value.replace(/\\D/g, \"\");\n  const computedDate =\n    valueDigits + referenceDateDigits.slice(valueDigits.length);\n  return computedDate;\n};\n\nconst getDateParts = (\n  locales?: string | string[] | undefined\n): Intl.DateTimeFormatPart[] => {\n  return new Intl.DateTimeFormat(locales).formatToParts();\n};\n\nexport const isValidDate = (date: Date): boolean => {\n  return date instanceof Date && !isNaN(date.valueOf());\n};\n\n/**\n * Get locale date pattern\n */\nexport const getDatePattern = (locale?: string): string => {\n  let pattern = \"\";\n  const dateParts = getDateParts(locale);\n  dateParts.forEach(({ type, value }) => {\n    if (type === \"month\" || type === \"day\") pattern += \"dd\";\n    else if (type === \"year\") pattern += \"dddd\";\n    else if (type === \"literal\") pattern += value;\n  });\n  return pattern;\n};\n\n/**\n * Convert locale date string to Date object\n */\nexport const date = (date: string, locale?: string): Date => {\n  const dateParts = getDateParts(locale);\n  const splitChar: string = dateParts.find(({ type }) => type === \"literal\")\n    ?.value!;\n  const dateArray = date.split(splitChar);\n  const { month, day, year }: { [x: string]: string } = {\n    [dateParts[0].type]: dateArray[0],\n    [dateParts[2].type]: dateArray[1],\n    [dateParts[4].type]: dateArray[2],\n  };\n  const dateFormat = `${month}/${day}/${year}`;\n  return new Date(dateFormat);\n};\n\n/**\n * Convert Date object to locale string\n */\nexport const dateTimeFormat = (\n  value: Date,\n  locale = navigator.language,\n  options?: Intl.DateTimeFormatOptions\n): string => {\n  return new Intl.DateTimeFormat(locale, options).format(value);\n};\n\n/**\n * Convert Datetime string to locale dateTime string\n */\nexport const localeDateTime = (\n  value: string,\n  locale: string = navigator.language,\n  options?: Intl.DateTimeFormatOptions\n): string => {\n  if (!value) return value;\n  const date = new Date(value);\n  if (!isValidDate(date)) return value;\n  const localeDateString = dateTimeFormat(date, locale, {\n    dateStyle: \"short\",\n    timeStyle: \"short\",\n    ...options,\n  });\n  return localeDateString;\n};\n\n/**\n * Convert Datetime string to locale date string\n */\nexport const localeDate = (\n  value: string,\n  locale: string = navigator.language,\n  options?: Intl.DateTimeFormatOptions\n): string => {\n  if (!value) return value;\n  const date = new Date(value);\n  if (!isValidDate(date)) return value;\n  const localeDateString = dateTimeFormat(date, locale, {\n    dateStyle: \"short\",\n    ...options,\n  });\n  return localeDateString;\n};\n\n/**\n * Convert Datetime string to locale dateTime string\n */\nexport const localeTime = (\n  value: string,\n  locale: string = navigator.language,\n  options?: Intl.DateTimeFormatOptions\n): string => {\n  if (!value) return value;\n  const date = new Date(value);\n  if (!isValidDate(date)) return value;\n  const localeDateString = dateTimeFormat(date, locale, {\n    timeStyle: \"short\",\n    ...options,\n  });\n  return localeDateString;\n};\n\n/**\n * Unmask locale Datetime string to Datetime ISO string\n */\nexport const unmaskDate = (\n  value: string,\n  locale: string = navigator.language\n): string => {\n  const dateObject = date(value, locale);\n  if (!isValidDate(dateObject)) return \"\";\n  return dateObject.toISOString();\n};\n","export const tokens: {\n  [key: string]: {\n    test: (input: string) => boolean;\n    transform: (input: string) => string;\n  };\n} = {\n  d: { test: (v) => /\\d/.test(v), transform: (v) => v },\n  a: {\n    test: (v) => /[a-z]/i.test(v),\n    transform: (v) => v.toLowerCase(),\n  },\n  A: {\n    test: (v) => /[a-z]/i.test(v),\n    transform: (v) => v.toUpperCase(),\n  },\n  w: {\n    test: (v) => /\\w/.test(v),\n    transform: (v) => v.toLowerCase(),\n  },\n  W: {\n    test: (v) => /\\w/.test(v),\n    transform: (v) => v.toUpperCase(),\n  },\n};\n","/**\n * Remove mask pattern\n */\nexport const unmask = (value: string, pattern?: string): string => {\n  if (!value) return value;\n  value = value.replace(/\\W/gi, \"\");\n  return !!pattern ? value.slice(0, pattern.replace(/\\W/gi, \"\").length) : value;\n};\n","import { tokens } from \"./tokens\";\nimport { unmask } from \"./unmask\";\n\nexport const mask = (value: string, patterns: string[]): string => {\n  if (!value) return \"\";\n  if (!patterns) throw ReferenceError(\"Value or pattern not found.\");\n  if (!Array.isArray(patterns))\n    throw ReferenceError(\"Pattern should be an array\");\n\n  const [pattern, dynamicPattern] = patterns.sort(\n    (a, b) => a.length - b.length\n  );\n  const computedPattern =\n    unmask(value).length <= unmask(pattern).length ? pattern : dynamicPattern;\n\n  let output = \"\";\n\n  for (\n    let unmaskedValue = unmask(value, computedPattern),\n      unmaskedPattern = unmask(computedPattern),\n      patternLength = computedPattern.length,\n      i = 0,\n      ii = 0;\n    i < patternLength && unmaskedValue[ii];\n    i++\n  ) {\n    const token = tokens[unmaskedPattern[ii]],\n      patternChar = computedPattern[i],\n      inputChar = unmaskedValue[ii];\n\n    if (!token.test(inputChar)) break;\n    else if (/\\W/.test(patternChar)) output += patternChar;\n    else (output += token.transform(inputChar)), ii++;\n  }\n\n  return output;\n};\n","import { currencyLocale } from \"./currency/currency-map\";\n\n/**\n * Remove non-numeric characters from a string\n */\nexport const unmaskNumber = (value: string): number => {\n  const digits = value.replace(/\\D/g, \"\");\n  let output = 0;\n  output = parseFloat(digits);\n  return output;\n};\n\n/**\n * Reverse Number Format\n */\nexport const numberUnformat = (value: string, locale?: string): number => {\n  const parts = new Intl.NumberFormat(locale).formatToParts(1111.1);\n  return reverseFormat(value, parts);\n};\n\n/**\n * Reverse Currency Format\n */\nexport const currencyUnformat = (\n  value: string,\n  locale: string = navigator.language,\n  currency: Intl.NumberFormatOptions[\"currency\"] = currencyLocale[\n    locale.slice(-2)\n  ]\n): number => {\n  const parts = new Intl.NumberFormat(locale, {\n    style: \"currency\",\n    currency,\n  }).formatToParts(1111.1);\n  const currencySymbol = parts.find(({ type }) => type === \"currency\")?.value;\n  const reversedValue = !!currencySymbol\n    ? value.replace(currencySymbol, \"\")\n    : value;\n  const output = reverseFormat(reversedValue, parts);\n  return output;\n};\n\n/**\n * Number reverse format\n */\nconst reverseFormat = (\n  value: string,\n  parts: Intl.NumberFormatPart[]\n): number => {\n  const group = parts.find((part) => part.type === \"group\")?.value;\n  const decimal = parts.find((part) => part.type === \"decimal\")?.value;\n  if (group) value = value.replace(group, \"\");\n  if (decimal) value = value.replace(decimal, \".\");\n  return Number.isNaN(value) ? NaN : parseFloat(value);\n};\n","import { currencyFormat } from \"./currency\";\nimport { date, getComputedDate, getDatePattern, isValidDate } from \"./date\";\nimport { mask } from \"./mask\";\nimport { numberFormat } from \"./number\";\nimport { unmaskNumber } from \"./unmaskNumber\";\n\n/**\n * Set locale number mask on input\n */\nexport const inputNumber = (value: string) => {\n  const unmaskedNumber = unmaskNumber(value);\n  return isNaN(unmaskedNumber) ? \"\" : numberFormat(unmaskedNumber);\n};\n\n/**\n * Set locale currency mask on input\n */\nexport const inputCurrency = (value: string) => {\n  const unmaskedNumber = unmaskNumber(value) / 100;\n  return isNaN(unmaskedNumber) ? \"\" : currencyFormat(unmaskedNumber);\n};\n\n/**\n * Set locale date mask on input\n */\nexport const inputDate = (\n  value: string,\n  locale: string = navigator.language\n): string => {\n  if (!value) return value;\n  const pattern = getDatePattern();\n  const computedDate = getComputedDate(value);\n  const maskedDate = mask(computedDate, [pattern]);\n  const dateObject = date(maskedDate, locale);\n  if (!isValidDate(dateObject)) throw new Error(\"Invalid date\");\n  return mask(value, [pattern]);\n};\n\nexport const input = (\n  element: HTMLInputElement,\n  patterns: string[]\n): (() => void) => {\n  if (!element || typeof element !== \"object\") {\n    throw Error(\"Element not found.\");\n  }\n  if (!patterns) {\n    throw ReferenceError(\"Pattern should be an array\");\n  }\n  if (!Array.isArray(patterns)) {\n    throw ReferenceError(\"Pattern should be an array\");\n  }\n\n  const [pattern, dynamicPattern] = patterns.sort(\n    (a, b) => a.length - b.length\n  );\n\n  let listener: () => void;\n\n  switch (pattern) {\n    case \"currency\": {\n      element.placeholder = currencyFormat(0);\n      listener = () => {\n        element.value = inputCurrency(element.value);\n      };\n      break;\n    }\n    case \"number\": {\n      listener = () => {\n        element.value = inputNumber(element.value);\n      };\n      break;\n    }\n    case \"date\": {\n      const pattern = getDatePattern();\n      element.minLength = element.maxLength = pattern.length;\n      element.pattern = `.{${pattern.length},${pattern.length}}`;\n      listener = () => {\n        try {\n          const maskedDate = inputDate(element.value);\n          element.value = maskedDate;\n          element.defaultValue = maskedDate;\n        } catch {\n          element.value = element.defaultValue;\n        }\n      };\n      break;\n    }\n    default: {\n      element.minLength = pattern.length;\n      element.maxLength = dynamicPattern?.length || pattern.length;\n      element.pattern = `.{${pattern.length},${\n        dynamicPattern?.length || pattern.length\n      }}`;\n      listener = () => {\n        element.value = mask(element.value, patterns);\n      };\n    }\n  }\n\n  element.value && listener();\n  element.addEventListener(\"input\", listener);\n\n  return () => {\n    element.removeEventListener(\"input\", listener);\n  };\n};\n","import { input } from \"./input\";\n\n/**\n * Mask all inputs what have data-index attribute\n */\nexport const prepareMaskInputs = (): void => {\n  const inputs = document.querySelectorAll(\"[data-mask]\");\n  inputs.forEach((el: any) => input(el, datasetToObject(el.dataset.mask)));\n};\n\n/**\n * Transform dataset to object\n */\nconst datasetToObject = (value: string): string[] =>\n  JSON.parse(value.replace(/'/g, '\"'));\n"],"names":[],"mappings":"+OAGa,KAAA,GAAe,CAC1B,EACA,EAAiB,UAAU,SAC3B,EAAQ,UACR,IAEU,GAAA,CAAE,QAAO,GAAG,GACf,GAAI,MAAK,aAAa,EAAQ,CAAO,EAAE,OAAO,CAAK,GCT/C,EAET,CACF,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,GAAI,MACJ,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"}